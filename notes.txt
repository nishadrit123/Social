All env vars are loaded from .env in root folder
air init creates an air.toml file where instructions to run the application exists 

To run
    a. Backend
        1. docker-compose build
        2. docker-compose up -d 
        3. Do "air" (air-verse performs go hot reload)
    b. frontend
        1. npm run dev inside web directory

To push 
    a. Do git push origin master 
    b. Enter something passphrase

Note
    a. Get from redis is called at different places accross the app with common function in common.go
        1. User for ( posts, followers, following count )
            Get user, jump to user profile from a post
        2. Post for ( likes and comment count )
            Get post, feed, saved post, all posts of a user, sent post 
    b. Get compact info related to users and groups, a given user is following, a follower and a part of using 
       common functions defined in common.go

Nats
    a. Pub-Sub
        Notification, online/offline status, typing indicator in chat
    b. Jetstream 
        Chatting, sending posts 

Pending
    concurrency handling 
    saved post loading error upon deleting a post
    following count of test user
    size of post in chats
    differntiate between users and groups in chatwindow and send button